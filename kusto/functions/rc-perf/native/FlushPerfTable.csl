.create-or-alter function with (docstring = "[t:string, paritionId:string, nodeName:string]
        where t=table name, paritionId=Parition Id, and nodeName=node name. 
        Return flush performance table of given node and partition.", folder = "rc-perf/native")
    FlushPerfTable(t:string, partitionId:string, nodeName:string) {
    let traces = GetTraces(t, partitionId, nodeName);
    let v2StartTraces = traces
    | where Type == strcat("LR.AcceptSingleOperationTransaction@", partitionId)
    | parse Text with * "TxId:"TransactionId:long " Lsn: " LSN:long
    | project v2StartTimestamp = Timestamp, TransactionId, LSN, LSNString = tostring(LSN);
    let v2FlushTraces = traces
    | where Type == strcat("LR.FlushedRecordsCallback@", partitionId)
    | extend LSNs = split(Text, " ")
    | mv-expand LSNs
    | where LSNs has "Lsn:"
    | parse LSNs with "Lsn:" LSN:long
    | project v2FlushETWTimestamp = Timestamp, LSN, LSNString = tostring(LSN);
    let v2FlushPerfTable = v2StartTraces
    | join kind=inner v2FlushTraces on LSNString
    | project TransactionId, LSN, v2StartTimestamp, v2FlushETWTimestamp
    | extend 
        FlushTimeMSec = datetime_diff('Millisecond', v2FlushETWTimestamp, v2StartTimestamp);
    v2FlushPerfTable
}
