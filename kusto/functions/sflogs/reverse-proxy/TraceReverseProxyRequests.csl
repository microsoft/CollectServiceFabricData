.create-or-alter function with (docstring = "[T:string] where T=table name. function to extract reverse proxy requests.", folder = "sflogs/reverse-proxy")
    TraceReverseProxyRequests(T:string) {
    let extractPattern_requestId = @'([a-z0-9]{8}\-[a-z0-9]{4}\-[a-z0-9]{4}\-[a-z0-9]{4}\-[a-z0-9]{12})';
    let extractPattern_ServiceUrls = @'((?:https?:\/\/[^,?]*))';
    let extractPattern_Verb = @'(verb\s=\s)([^,]*)';
    let extractPattern_Started = @'';
    let extractPattern_Finished = @'';
    let extractPattern_FwdToUrl = @'((?:https?:\/\/[^,?]*))';
    let extractPattern_AppServiceNames = @'19081\/([^\/]*)\/([^\/]*)';
    let extractPattern_ControllerMethodNames = @'api\/([^\/]*)\/([^\/]*)';
    table(T)
    | where Type contains "ReverseProxy"
    //| where Text !contains "status code"
    | extend requestId = extract(extractPattern_requestId, 1, Text, typeof(string))
    | extend serviceUrls = extract_all(extractPattern_ServiceUrls, Text)        
    | extend serviceUrl = tostring(array_slice(serviceUrls, 0, 0)[0])
    | extend verb = extract(extractPattern_Verb, 2, Text, typeof(string))
    | extend fwdToUrl = tostring(array_slice(serviceUrls, 1, 1)[0])
    | extend appName = extract(extractPattern_AppServiceNames, 1, serviceUrl)
    | extend serviceName = extract(extractPattern_AppServiceNames, 2, serviceUrl)
    | extend controllerName = extract(extractPattern_ControllerMethodNames, 1, serviceUrl)
    | extend methodName = extract(extractPattern_ControllerMethodNames, 2, serviceUrl)
    | project Timestamp , TID , PID , Level , Type , Text , NodeName , FileType, requestId, serviceUrl, verb, fwdToUrl, appName, serviceName, controllerName, methodName
    | limit 95000
    | order by Timestamp asc
}
