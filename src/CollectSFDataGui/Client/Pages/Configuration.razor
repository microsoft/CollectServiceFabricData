@page "/configuration"
@using CollectSFDataGui.Shared
@using CollectSFData.Common
@using CollectSFData
@using BlazorApp.Helpers
@using Microsoft.Extensions.Logging;

@inject HttpClient Http
@inject NavigationManager navigationManager
@inject ILogger<Configuration> logger;

<style>
    form .row {
        margin-bottom: 16px;
    }
</style>

@if (config == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenTemplateForm Data="@config" Submit="@((ConfigurationOptions args) => { Submit(args); })">
        <div class="row">
            <div class="col-md-6">
                <RadzenFieldset Text="Required Information">
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Gather Type" />
                        </div>
                        <div class="col-md-8">
                            <RadzenDropDown @bind-Value="config.GatherType
                            " AllowClear="true" Placeholder="Select something" Data="@GatherTypes" style="width: 100%;" TextProperty="Gather Type" ValueProperty="GatherTypeValue" Name="GatherType">
                            </RadzenDropDown>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Start Time Stamp" />
                        </div>
                        <div class="col-md-8">
                            <RadzenDatePicker style="width: 100%;" Name="StartDate" @bind-Value="config.StartTimeUtc" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="End Time Stamp" />
                        </div>
                        <div class="col-md-8">
                            <RadzenDatePicker style="width: 100%;" Name="EndDate" @bind-Value="config.EndTimeUtc" />
                        </div>
                    </div>
                </RadzenFieldset>
                <RadzenFieldset Text="Kusto Table Information">
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Table Name" />
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox @bind-Value="tableName" style="width: 100%;" Name="TableName" />
                        </div>
                    </div>
                    <RadzenTabs SelectedIndex="0">
                        <Tabs>
                            <RadzenTabsItem Text="Kusto">
                                <div class="row">
                                    <div class="align-items-center d-flex col-md-2">
                                        <RadzenLabel Text="Kusto Cluster" />
                                    </div>
                                    <div class="col-md-10">
                                        <RadzenTextBox @bind-Value="config.KustoCluster" Placeholder="https://ingest-sfcluster.kusto.windows.net/sfdatabase" style="width: 100%;" Name="KustoCluster" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <RadzenLabel Text="Kusto Compressed" />
                                    </div>
                                    <div class="col-md-8">
                                        <RadzenSelectBar @bind-Value=@config.KustoCompressed TValue="bool">
                                            <Items>
                                                <RadzenSelectBarItem Text="On" Value="true" />
                                                <RadzenSelectBarItem Text="Off" Value="false" />
                                            </Items>
                                        </RadzenSelectBar>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <RadzenLabel Text="Kusto Recreate Table" />
                                    </div>
                                    <div class="col-md-8">
                                        <RadzenSelectBar @bind-Value=@config.KustoRecreateTable TValue="bool">
                                            <Items>
                                                <RadzenSelectBarItem Text="On" Value="true" />
                                                <RadzenSelectBarItem Text="Off" Value="false" />
                                            </Items>
                                        </RadzenSelectBar>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <RadzenLabel Text="Kusto Use Blob As Source" />
                                    </div>
                                    <div class="col-md-8">
                                        <RadzenSelectBar @bind-Value=@config.KustoUseBlobAsSource TValue="bool">
                                            <Items>
                                                <RadzenSelectBarItem Text="On" Value="true" />
                                                <RadzenSelectBarItem Text="Off" Value="false" />
                                            </Items>
                                        </RadzenSelectBar>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4 align-items-center d-flex">
                                        <RadzenLabel Text="Kusto Use Ingest Message" />
                                    </div>
                                    <div class="col-md-8">
                                        <RadzenSelectBar @bind-Value=@config.KustoUseIngestMessage TValue="bool">
                                            <Items>
                                                <RadzenSelectBarItem Text="On" Value="true" />
                                                <RadzenSelectBarItem Text="Off" Value="false" />
                                            </Items>
                                        </RadzenSelectBar>
                                    </div>
                                </div>
                            </RadzenTabsItem>
                            <RadzenTabsItem Text="Log Analytics">
                            </RadzenTabsItem>
                        </Tabs>
                    </RadzenTabs>
                </RadzenFieldset>
            </div>
            <div class="col-md-6">
                <RadzenFieldset Text="Store Info">
                    <div class="row">
                        <div class="align-items-center d-flex col-md-2">
                            <RadzenLabel Text="Store #" />
                        </div>
                        <div class="col-md-10">
                            <RadzenTextBox Placeholder="123" style="width: 45.3125px;" Name="StoreId" />
                            <RadzenButton ButtonStyle="ButtonStyle.Info" Icon="add_location" style="margin-left: 11px; width: 166.046875px;" Text="Locate store">
                            </RadzenButton>
                        </div>
                    </div>
                    <div class="row">
                        <div class="align-items-center d-flex col-md-2">
                            <RadzenLabel Text="Name" />
                        </div>
                        <div class="col-md-10">
                            <RadzenTextBox Disabled="true" Placeholder="The warehouse" style="width: 100%;" Name="Warehouse" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="align-items-center d-flex col-md-2">
                            <RadzenLabel Text="Region" />
                        </div>
                        <div class="col-md-3">
                            <RadzenTextBox Disabled="true" Placeholder="West" style="width: 100%;" Name="Region" />
                        </div>
                        <div class="align-items-center d-flex col-md-2">
                            <RadzenLabel Text="System" />
                        </div>
                        <div class="col-md-5">
                            <RadzenTextBox Disabled="true" Placeholder="US" style="width: 100%;" Name="System" />
                        </div>
                    </div>
                </RadzenFieldset>
                <RadzenFieldset Text="POS Info">
                    <div class="row">
                        <div class="align-items-center d-flex col-md-3">
                            <RadzenLabel Text="Trans #" />
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox Disabled="true" Placeholder="S4485" style="width: 100%;" Name="TransId" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="align-items-center d-flex col-md-3">
                            <RadzenLabel Text="Register" />
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox Disabled="true" Placeholder="Register #4" style="width: 100%;" Name="Register" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="align-items-center d-flex col-md-3">
                            <RadzenLabel Text="Clerk" />
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox Disabled="true" Placeholder="Jane Doe" style="width: 100%;" Name="Clerk" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="align-items-center d-flex col-md-3">
                            <RadzenLabel Text="Amount" />
                        </div>
                        <div class="col-md-3">
                            <RadzenNumeric Placeholder="300" style="width: 100%;" Name="Amount" @bind-Value="Amount" />
                        </div>
                        <div class="align-items-center d-flex col-md-2">
                            <RadzenLabel Text="Tax" />
                        </div>
                        <div class="col-md-4">
                            <RadzenNumeric Placeholder="123" style="width: 100%;" Name="Tax" @bind-Value="Tax" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="align-items-center d-flex col-md-3">
                            <RadzenLabel Text="Config Date" />
                        </div>
                        <div class="col-md-3">
                            <RadzenDatePicker style="width: 100%;" Name="ConfigDate" @bind-Value="config.StartTimeUtc" />
                        </div>
                        <div class="align-items-center d-flex col-md-2">
                            <RadzenLabel Text="Ship Date" />
                        </div>
                        <div class="col-md-4">
                            <RadzenDatePicker style="width: 100%;" Name="ShipDate" @bind-Value="config.EndTimeUtc" />
                        </div>
                    </div>
                </RadzenFieldset>
            </div>
        </div>
        <div>
            @* class="row justify-content-center">*@
            <div class="row justify-content-left">
                <RadzenButton ButtonType="ButtonType.Submit" Icon="save" style="margin-left: 20px;" Text="Save" />
            </div>
            <div class="row justify-content-left">
                <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="margin-left: 20px;" Text="Cancel" Click="@Cancel" />
            </div>
            <div class="row justify-content-left">
                <RadzenButton Text="Upload" Click=@(args => upload.Upload()) Style="margin-left: 20px;" />
                <RadzenUpload @ref="upload" Auto="false" Multiple="false" Url="upload/single" Style="margin-left: 20px;" Change=@(args => OnChange(args, "Manual Upload"))
                          Progress=@(args => OnProgress(args, "Manual Upload")) />
                @*<RadzenUpload ChooseText="Upload" Url="upload/single" Style="margin-left: 20px;" Progress=@(args => OnProgress(args, "Single file upload")) />*@
            </div>
            <div class="col-xl-6">
                <EventConsole @ref=@console />
            </div>

        </div>
    </RadzenTemplateForm>
}

@code {
    private List<string> GatherTypes;
    private ConfigurationOptions config { get; set; }
    private ConfigurationOptions tempconfig { get; set; }
    private string tableName;

    // temp
    public int CardId { get; set; }
    public string CardNr { get; set; }
    public DateTime ExpiryDate { get; set; }
    public string CardHolder { get; set; }
    public string Name { get; set; }
    public string Address1 { get; set; }
    public string Address2 { get; set; }
    public string City { get; set; }
    public string State { get; set; }
    public string Zip { get; set; }

    public int StoreId { get; set; }
    public string Warehouse { get; set; }
    public string Region { get; set; }
    public string System { get; set; }
    public int TransId { get; set; }
    public string Register { get; set; }
    public string Clerk { get; set; }
    public decimal Amount { get; set; }
    public decimal Tax { get; set; }
    public DateTime OrderDate { get; set; }
    public DateTime ShipDate { get; set; }
    // end temp

    protected override async Task OnInitializedAsync()
    {
        ConfigurationOptions[] configs;
        var queryString = navigationManager.QueryString();
        configs = await Http.GetFromJsonAsync<ConfigurationOptions[]>("api/configuration");
        config = configs[0].Clone();
        tempconfig = configs[0].Clone();
        tableName = config.KustoTable;
        GatherTypes = Enum.GetNames(typeof(CollectSFData.DataFile.FileTypesEnum)).ToList();
    }
    public class ConfigSubmit
    {
        ConfigurationOptions Properties { get; set; }
        public ConfigSubmit() { }
        public ConfigSubmit(ConfigurationOptions properties)
        {
            Properties = properties;
        }
    }

    public class CreditCard
    {
        public int CardId { get; set; }
        public string CardNr { get; set; }
    }

    public class Country
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    ConfigSubmit configSubmit = new ConfigSubmit();

    List<CreditCard> cards = new List<CreditCard>()
{
    new CreditCard() { CardId = 1, CardNr = "5555555555554444" },
    new CreditCard() { CardId = 2, CardNr = "4012888888881881" }
    };

    List<Country> countries = new List<Country>()
    {
    new Country() { Id = 1, Name = "USA" },
    new Country() { Id = 2, Name = "Germany" }
    };

    void Submit(ConfigurationOptions arg)
    {
        //
    }

    void Cancel()
    {
        //
    }

    // file upload
    EventConsole console;
    RadzenUpload upload;
    int progress;
    string info;

    int customParameter = 1;

    void OnChange(UploadChangeEventArgs args, string name)
    {
        foreach (var file in args.Files)
        {
            console.Log($"File: {file.Name} / {file.Size} bytes");
        }

        console.Log($"{name} changed");
    }

    void OnProgress(UploadProgressArgs args, string name)
    {
        this.info = $"% '{name}' / {args.Loaded} of {args.Total} bytes.";
        this.progress = args.Progress;

        if (args.Progress == 100)
        {
            console.Clear();

            foreach (var file in args.Files)
            {
                console.Log($"Uploaded: {file.Name} / {file.Size} bytes");
            }
        }
    }

    void OnComplete(UploadCompleteEventArgs args)
    {
        console.Log($"Server response: {args.RawResponse}");
    }
}